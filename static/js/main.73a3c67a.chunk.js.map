{"version":3,"sources":["components/Cards/Card.jsx","components/Carlist/Cardlist.jsx","components/Nav/FilterItem/FilterItem.jsx","components/Nav/FiltersList/FiltersList.jsx","components/Nav/SearchBox/_Searchbox.jsx","components/Nav/Navbar.jsx","components/Main/main.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Card","props","image","name","brewed","abv","ph","className","src","alt","Cardlist","cardMap","cardArray","map","item","index","image_url","first_brewed","FilterItem","handleCheck","filterClassic","filterAcidic","type","onChange","for","Filterlist","results","Search","search","handleInput","value","onInput","Nav","searchNav","FiltersList","Main","App","useState","cardArr","setCardArr","searchTerm","setSearchTerm","filterOne","setFilter1","useEffect","URL","fetch","then","response","json","beerObject","console","log","cardsFilter","filter","card","toLowerCase","includes","event","inputTarget","target","e","checked","filterCurrent","beer","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73a3c67a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../Cards/card.scss\";\n\nconst Card = (props) => {\n  const {image, name, brewed, abv,ph,} = props\nreturn <div className=\"Card\">\n\n  <img src= {image} alt=\"solo beer can\" className= \"Card__image\"/>\n  <p> {name}</p>\n  <p>First brewed: {brewed}</p>\n  <p>ABV: {abv}</p>\n  <p> pH: {ph}</p>\n  <button className=\"Card__button\" > More information</button>\n\n</div>\n\n}\n// console.log (Card)\n\nexport default Card\n\n\n\n// const Card = (props) => {\n//   const {image} = props\n//   const cardMap = image.map(item => {\n//     return <div>\n//       <img src= {item.image_url} alt =\"beer\" />\n//     </div>\n//   })\n//   return cardMap\n// }\n\n// export default Card","import React, { useEffect, useState } from \"react\";\nimport \"./Cardlist.scss\";\nimport Card from \"../Cards/Card\";\nimport data from \"../../data/data\";\n\n\nconst Cardlist = (props) => {\n  const {cardArray} = props \n\n  // const [cardArray, setCardArray] = useState ([]);\n  // // const [cardRange, setCardRange] = useState (10)\n  // fetch('https://api.punkapi.com/v2/beers').then(response => {\n  //   return response.json ()\n  // }).then(beerObject => {\n  //   console.log (beerObject)\n  //   setCardArray(beerObject)\n  // })\n\n  const cardMap = cardArray.map ((item, index) => {\n    return  <Card  key={\"item\" + index} image = {item.image_url} name= {item.name} brewed = {item.first_brewed} abv = {item.abv}  ph={item.ph} />\n  })\n\n  \n  return <div className = \"Cards__list\">\n   {cardMap} \n  </div>\n\n\n\n\n\n}\n\nexport default Cardlist\n\n// using data file\n\n// const Cardlist = () => {\n//   const cardMap = data.map ((item, index) => {\n//     return  <Card  key={\"item\" + index} image = {item.image_url} name= {item.name} brewed = {item.first_brewed} abv = {item.abv}  ph={item.ph} />\n//   })\n\n  \n//   return <div className = \"Cards__list\">\n//    {cardMap} \n//   </div>\n\n\n\n\n\n","import React from \"react\";\n\nconst FilterItem = (props) => {\n  const { handleCheck, filterClassic, filterAcidic} = props\n  return <div>\n   <input type=\"checkbox\"  name =\"High ABV (<6.0%)\" onChange={handleCheck}/> \n   <label for=\"High ABV (<6.0%)\" > High ABV </label>  \n  <input type=\"checkbox\" name=\"Classic\" onChange={filterClassic}/>\n   <label for=\"Classic\"> Classic </label>   \n   <input type=\"checkbox\" name =\"Acidic\" onChange= {filterAcidic}/>\n   <label for=\"Acidic\"> Acidic </label>   \n  </div>\n}\n\nexport default FilterItem\n\n\n","import react from \"react\";\nimport FilterItem from \"../FilterItem/FilterItem\";\nimport \"../FiltersList/FilterList.scss\";\n\n\nconst Filterlist = (props) => {\nconst {handleCheck, filterClassic,filterAcidic, results} = props\n\n\n  return  <div className=\"filter-list\">\n    <p className=\"filter-list__results\"> Results:{results} </p>\n    <FilterItem className=\"filter-list__item\"  handleCheck= {handleCheck} filterClassic={filterClassic} filterAcidic={filterAcidic}/> \n      \n  </div>\n}\n\nexport default Filterlist ","import react from \"react\";\nimport \"../SearchBox/Searchbox.scss\"\n\n\nconst Search = (props) => {\n\n  const {search, handleInput} = props\n  return <div>\n    <input className=\"Search\" value = {search} onInput = {handleInput} /> \n\n  </div>\n}\n\nexport default Search","import React from \"react\";\nimport FiltersList from \"./FiltersList/FiltersList\";\n\nimport \"./Navbar.scss\";\nimport Search from \"./SearchBox/_Searchbox\";\n\n\nconst Nav = (props) => {\n  const {search, handleInput, handleCheck, filterClassic, filterAcidic, results} = props\n\n  return <nav className=\"Nav\">\n    <label className=\"Nav__label-search\"> Search by Beer Name</label>\n    <Search className=\"Nav__search\" searchNav= {search} handleInput = {handleInput} /> \n    <FiltersList handleCheck= {handleCheck} filterClassic={filterClassic} filterAcidic={filterAcidic}  results ={results}/> \n\n  </nav>\n}\n// to do a searchbar= you need to store search input,\n//and check if input === api data beer name- so need to do it on the app? \n\nexport default Nav","import React from \"react\";\nimport Cardlist from \"../Carlist/Cardlist\";\n\nconst Main = (props) => {\n  const {cardArray} = props\n\n\n\n  return (\n    <Cardlist cardArray={cardArray} /> \n  )\n\n\n}\n\n\nexport default Main","// App.jsx\nimport React, {useState, useEffect} from \"react\";\nimport \"./App.scss\";\nimport Card from \"./components/Cards/Card\";\nimport Cardlist from \"./components/Carlist/Cardlist\";\nimport Nav from \"./components/Nav/Navbar\";\nimport Main from \"./components/Main/main\";\n\nconst App = () => {\nconst [cardArr, setCardArr] = useState([]);\nconst [searchTerm, setSearchTerm] = useState (\"\")\nconst [isChecked, setIsChecked ] = useState (false)\nconst [filteredArr, setfilteredArr] = useState([]);\nconst [filterOne, setFilter1] = useState (\"\");\n\n\n\nuseEffect (() => {\n  const URL = `https://api.punkapi.com/v2/beers${filterOne}`\n  fetch(URL).then(response => {\n    return response.json ()\n  }).then(beerObject => {\n    console.log (beerObject)\n    setCardArr(beerObject)\n  })\n\n},[filterOne])\n\n// nav will still need same 2 props from search bar but we will be passing a function as the handleinput here, and the search term will be equal to the user input. need to also create a filtered araay that will filter, - will need touse state as we want to change the cards being sdiaplyed depending on the search term.- whole point of filter is to include items that match the search term- why we only return beer items that include the search term! \n\nconst cardsFilter = cardArr.filter(card => {\n  const beer = card.name.toLowerCase ();\n  return beer.includes (searchTerm) \n\n})\n// handinput so when user types we can change the card display\nconst handleInputText = event => {\n  const inputTarget = event.target.value.toLowerCase ();\n  return setSearchTerm (inputTarget)\n\n}\n\n\n\n// when you click the checkbox you want to store the value and return cards that include the checkbox value. \n// weh u click checkbox- handlecheck- u want to change the beer cards being displayed to include cards with a ABV igher than 6%.  \n// since check box changes- we need to use state.\n\n// const [check, setCheck]= useState (\"\");\n\n// const handleClick = (event) => {\n//   // console.log(event.target.checked)\n//   // setIsChecked(!isChecked);\n\n//   const abvFilter = cardArr.filter (beer => {\n//     return beer.abv > 6; })\n//     console.log (abvFilter)\n//    event.target.checked ? setCardArr(abvFilter) : setCardArr(filteredArr)\n// } \n//handleclick using URL= when\nconst handleClick = (e) => {\n  const filterabv = \"?abv_gt=6\"\n  e.target.checked ? setFilter1 (filterabv) : setFilter1 (\"\")\n} \n\nconst handleClassic = (e) => {\n  const filterClassic = \"?brewed_before=01-2010\"\n  e.target.checked ? setFilter1 (filterClassic) : setFilter1 (\"\")\n}\n\n\nconst handleAcidic = (e) => {\n  console.log(e)\n  const filterCurrent = cardArr.filter(beer => {\n    return beer.ph > 4\n  })\n  e.target.checked ? setCardArr (filterCurrent) : setCardArr (cardArr)\n \n}\nconst results = () => {\n  if (filterOne) {\n   return filterOne.length\n  } else {\n  return cardArr.length;\n  }\n\n}\n\n  return (\n    <div className=\"app\">\n      <header className=\"greeting\">\n        <h1 className=\"greeting__heading\">PUNK API </h1>    \n      </header>\n      <div className=\"page\"> \n      <Nav search = {searchTerm} handleInput= {handleInputText} \n handleCheck={handleClick} \nfilterClassic={handleClassic}\nfilterAcidic={handleAcidic}\nresults = {results} />\n       <div>\n       {/* <h2> results {isChecked ? \"ABV higher than 6%\" : \"All\"} </h2> */}\n        </div>\n        \n    \n      \n    \n      <section>\n        <Main className=\"cardArray\" cardArray={cardsFilter} /> \n\n      </section>\n      </div>\n     \n    </div>\n  );\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}